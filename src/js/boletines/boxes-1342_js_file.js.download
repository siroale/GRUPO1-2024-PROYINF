/*
 * $Id: ntg_frames_simple_filter.js 1204 2021-10-29 21:18:31Z hrodrigu $
 * ntg_frames_simple_filter
 * written by Hrodrigu
 * http://www.newtenberg.com
 * GPL (GPL-LICENSE.txt) licenses.
 * Built for jQuery library
 * http://jquery.com
 * Used
 https://fia-engine.newtenberg.com/pressroom/boxConfig.cgi?action=tabEditBox&cid=501&bid=1342
 https://engine.newtenberg.com/pressroom/boxConfig.cgi?action=tabEditBox&cid=956&bid=21261
 https://curriculum-engine.newtenberg.com/pressroom/boxConfig.cgi?action=tabEditBox&cid=519&bid=8993
 https://engine.sernac.cl/pressroom/boxConfig.cgi?action=tabEditBox&cid=501&bid=1419
 */
(function($){
	$.fn.ntg_frames_simple_filter = function(options){
		var params = [];
		for(var i=1; i<arguments.length;i++){
			params.push(arguments[i]);
		}
		var defaults = {
			"itemSelector": ".recuadro",
			"grupoSelector": ".grupo",
			"grupoChange": function(grupos){},
			"initialState": "visible",
			"toggleFunc": undefined,
			"textoPlaceholder":"ingrese un texto para filtrar ",
			"elementosThreshold": 9,
			"keyThreshold":0,
			"markSelectedText": true,
			"markSelectedClass": "ntg-marked",
			"filterType" : "phrase", // "startswith", "phrase",  "and", "or"
			"inputId": undefined,
			"countId": undefined,
			"countTextId": undefined,
			"countNoneText":"",
			"countSomeText":"",
			"inputInsertBeforeSelector": "*:first",
			"noneSelected": "ntg-ninguno-seleccionado",
			"waiterSelector": '.ntg-waiter',
			"inputTemplate":
			'<div class="form-group">'+
			'	<div class="input-group">'+
			'		<input class="form-control" type="text" placeholder="$textoPlaceholder">'+
			'		<div class="input-group-addon"><span class="count"></span> <span class="count-text"></span></div>'+
			'	</div>'+
			'</div>',
			"btnBackSpace": //  se impleenta default con un svg incrustado, 
			'<button id="backspaceBtn" '+
			'	class="" '+
			'	style="width: 32px;height: 32px;">'+
			'	<svg version="1.1" ' +
			'		id="Layer_1" ' +
			'		xmlns="http://www.w3.org/2000/svg" ' +
			'		xmlns:xlink="http://www.w3.org/1999/xlink" ' +
			'		x="0px" ' +
			'		y="0px" ' +
			'		viewBox="0 0 512 512" ' +
			'		style="enable-background:new 0 0 512 512;" ' +
			'		xml:space="preserve">'+
			'		<g>'+
			'			<path style="fill:#7f7f7f;fill-opacity:.5" ' +
			'				d="M490.667,' +
			'				64H133.077c-7.196,' +
			'				0-13.906,' +
			'				3.627-17.848,' +
			'				9.647L3.485,' +
			'				244.314c-4.647,' +
			'				7.098-4.647,' +
			'				16.274,' +
			'				0,' +
			'				23.372 l111.744,' +
			'				170.667c3.942,' +
			'				6.02,' +
			'				10.652,' +
			'				9.647,' +
			'				17.848,' +
			'				9.647h357.589c11.782,' +
			'				0,' +
			'				21.333-9.551,' +
			'				21.333-21.333V85.333 C512,' +
			'				73.551,' +
			'				502.449,' +
			'				64,' +
			'				490.667,' +
			'				64z M469.333,' +
			'				405.333H144.609L46.833,' +
			'				256l97.776-149.333h324.725V405.333z"/>'+
			'			<path  style="fill:#7f7f7f;fill-opacity:.5" ' +
			'				d="M198.246,' +
			'				356.418c8.331,' +
			'				8.331,' +
			'				21.839,' +
			'				8.331,' +
			'				30.17,' +
			'				0l70.248-70.248l70.248,' +
			'				70.248c8.331,' +
			'				8.331,' +
			'				21.839,' +
			'				8.331,' +
			'				30.17,' +
			'				0 s8.331-21.839,' +
			'				0-30.17L328.834,' +
			'				256l70.248-70.248c8.331-8.331,' +
			'				8.331-21.839,' +
			'				0-30.17s-21.839-8.331-30.17,' +
			'				0l-70.248,' +
			'				70.248 l-70.248-70.248c-8.331-8.331-21.839-8.331-30.17,' +
			'				0c-8.331,' +
			'				8.331-8.331,' +
			'				21.839,' +
			'				0,' +
			'				30.17L268.495,' +
			'				256l-70.248,' +
			'				70.248 C189.915,' +
			'				334.58,' +
			'				189.915,' +
			'				348.087,' +
			'				198.246,' +
			'				356.418z"/>'+
			'		</g>'+
			'	</svg>'+
			'</button>',
			"debug":true 
		};
		if (typeof(options) ==='object' || typeof(options) ==='undefined' ){
			return this.each(function(){
				var obj        = {};
				obj.dom        = this;
				obj.opts       = $.extend(defaults, options);
				obj.tr         = {};
				obj.tr['á']    = 'a';
				obj.tr['é']    = 'e';
				obj.tr['í']    = 'i';
				obj.tr['ó']    = 'o';
				obj.tr['ú']    = 'u';
				obj.tr['ñ']    = 'n';
				obj.abecedario = "ABCDEFGHIJKLMNOPQRSTUVWXYabcdefghijklmnopqrstuvwxyz";
				obj.lastText   = "";
				obj.init       = function(force){
					if (typeof($(obj.dom).data("ntg_frames_simple_filter_instance")) != "undefined"  && typeof(force) == "undefined"){
						return;
					}
					//init plugin
					debug("init");
					obj.recuadros = $(obj.opts.itemSelector,obj.dom)
						.each(function(i,frame){
							var texto = $(frame)
								.find("*")
								.contents()
								.filter(function(){	
									return this.nodeType == 3 && this.nodeValue.trim().length > 0;
								})
								.map(function(){ 
									return $(this).text().replace(/\s+/g," ").trim();
								})
								.toArray().join(" ")
								.toLowerCase()
								.replace(/[áéíúóñ]/g,function(match){ return obj.tr[match];})
								.replace(/[^A-Za-z0-9 ]/g, " ")
								.replace(/\s+/g," ")
								.trim();
							$(frame).data("ntg_saved_html", $(frame).clone());	
							$(frame).data("ntg_text", texto);	
							$(frame).data("ntg_text_array", texto.split(/\s+/));	
						});
					obj.grupos = $(obj.opts.grupoSelector,obj.dom);
					if ( obj.opts.initialState != "visible"){
						if("function" == typeof(obj.opts.toggleFunc)){
							obj.opts.toggleFunc.call(obj.recuadros, false);
						}else{
							$(obj.recuadros).toggle(false);
						}
					}
					if($(obj.recuadros).length > obj.opts.elementosThreshold){
						var ancho = Math.min($(obj.dom).width(), $(obj.dom).parent().width());
						if("undefined" == typeof(obj.opts.inputId)){
							var temp = obj.opts.inputTemplate
								.replace(/\$textoPlaceholder/g, obj.opts.textoPlaceholder);
							obj.cont = $(temp);
							var target = $(obj.opts.inputInsertBeforeSelector, obj.dom);
							$(obj.cont).insertBefore(target);
							obj.count = $(".count", obj.cont);
							obj.countText = $(".count-text", obj.cont);
							obj.input = $("input[type='text']", obj.cont);
						}else{
							obj.input = $("#" + obj.opts.inputId);
							if("undefined" != typeof(obj.opts.countId)){
								obj.count = $("#" + obj.opts.countId);
							}
							if("undefined" != typeof(obj.opts.countTextId)){
								obj.countText = $("#" + obj.opts.countTextId);
							}
						}
						if ( obj.opts.initialState != "visible"){
							$(obj.count).text(0);
						}else{
							$(obj.count).text($(obj.recuadros).length);
						}
						$(obj.countText).html(obj.opts.countNoneText);
						$(obj.dom).addClass(obj.opts.noneSelected);
						obj.btnBackSpace = $(obj.opts.btnBackSpace);
						obj.waiter       = $(obj.opts.waiterSelector).toggle(false);
						$(obj.input).on("keydown", function(event) {
							$(obj.waiter).toggle(true);
						});
						$(obj.input).on("keyup", function(event) {
							var original = $(this).val();
							var value = original
								.trim()
								.toLowerCase()
								.replace(/[áéíúóñ]/g,function(match){
									return obj.tr[match];
								});
							if(value.length == 0 && obj.lastText.length > 0){
								obj.reset();
							}else{
								var elegidos = [];
								if( value.length > obj.opts.keyThreshold ){
									elegidos = $(obj.recuadros)
										.filter(function(i,frame) {
											var pos = 0;
											var test = true;
											var texto = $(frame).data("ntg_text");
											if(obj.opts.filterType.indexOf("startswith") != -1){
												var texto_array = $(frame).data("ntg_text_array");
												var palabras = value.trim().split(/\s+/);
												var cond = $.grep(palabras, function(palabra){ 
													return  find(palabra,texto_array);
												});
												if( obj.opts.filterType.indexOf("or") != -1){
													test = cond.length > 0;
												}else{
													test = cond.length == palabras.length;
												}
											}else if(obj.opts.filterType == "phrase"){
												// frase completa
												test = texto.indexOf(value) > -1;
											}else{
												// simple , and u or 
												var palabras = value.trim().split(/\s+/);
												var cond = $.grep(palabras, function(palabra){ 
													return texto.indexOf(palabra) > -1; 
												});
												if( obj.opts.filterType == "and"){
													test = cond.length == palabras.length;
												}else if( obj.opts.filterType == "or"){
													test = cond.length > 0;
												}
											}
											if(test && obj.opts.markSelectedText){
												markFrame(frame, original);
											}
											if("function" == typeof(obj.opts.toggleFunc)){
												obj.opts.toggleFunc.call(frame, test);
											}else{
												$(frame).toggle(test);
											}
											return test;
										});
									$(obj.btnBackSpace).toggle(true);
								}else{
									if("function" == typeof(obj.opts.toggleFunc)){
										obj.opts.toggleFunc.call(obj.recuadros, obj.opts.initialState == "visible");
									}else{
										$(obj.recuadros).toggle(obj.opts.initialState == "visible");
									}
									if ( obj.opts.initialState == "visible"){
										elegidos = $(obj.recuadros);
									}
									$(obj.btnBackSpace).toggle(false);
									if(obj.opts.markSelectedText){
										resetFrame(obj.recuadros);
									}
//									$(obj.grupos).each(function(i,grupo){
//										$(grupo).toggle(true);
//									});
								}
								$(obj.count).text(elegidos.length);
								if(elegidos.length ==  $(obj.recuadros).length){
									$(obj.dom).addClass(obj.opts.noneSelected);
									//obj.reset();
								}else{
									$(obj.dom).removeClass(obj.opts.noneSelected);
								}
								if($(elegidos).length > 0 &&  $(elegidos).length < $(obj.recuadros).length){
									$(obj.countText).html(obj.opts.countSomeText);
								}else{
									$(obj.countText).html(obj.opts.countNoneText);
								}
								if("function" == typeof(obj.opts.grupoChange)){
									obj.opts.grupoChange.call(obj, obj.grupos);
								}
							}
							obj.lastText = value;
							$(obj.waiter).toggle(false);
						});
						$(obj.btnBackSpace)
							.insertAfter(obj.input)
							.toggle(false)
							.click(function(){
								obj.reset();
							});
						//se guarda la instancia el propio nodo DOM
						$(obj.dom).data("ntg_frames_simple_filter_instance",obj);
					}
				};
				obj.reset = function(){
					$(obj.count) .text($(obj.recuadros).length);
					$(obj.input).val("");
					if(obj.opts.markSelectedText){
						resetFrame(obj.recuadros);
					}
					if ( obj.opts.initialState != "visible"){
						if("function" == typeof(obj.opts.toggleFunc)){
							obj.opts.toggleFunc.call(obj.recuadros, false);
						}else{
							$(obj.recuadros).toggle(false);
						}
					}else{
						if("function" == typeof(obj.opts.toggleFunc)){
							obj.opts.toggleFunc.call(obj.recuadros, true);
						}else{
							$(obj.recuadros).toggle(true);
						}
					}
					$(obj.grupos).each(function(i,grupo){
						if("function" == typeof(obj.opts.toggleFunc)){
							obj.opts.toggleFunc.call(obj.grupo, true);
						}else{
							$(obj.grupo).toggle(true);
						}
					});
					if("function" == typeof(obj.opts.grupoChange)){
						obj.opts.grupoChange.call(obj, obj.grupos);
					}
					$(obj.btnBackSpace).toggle(false);
					$(obj.dom).addClass(obj.opts.noneSelected);
					$(obj.countText).text(obj.opts.countNoneText);
					return obj.dom;
				}
				obj.destroy = function(){
					resetFrame(obj.recuadros);
					if("function" == typeof(obj.opts.toggleFunc)){
						obj.opts.toggleFunc.call(obj.recuadros, false);
					}else{
						$(obj.recuadros).toggle(false);
					}
					$(obj.grupos).each(function(i,grupo){
						if("function" == typeof(obj.opts.toggleFunc)){
							obj.opts.toggleFunc.call(obj.grupo, true);
						}else{
							$(obj.grupo).toggle(true);
						}
					});
					$(obj.input) .off( "keyup" );
					$(obj.input) .off( "keydown" );
					if("undefined" == typeof(obj.opts.inputId)){
						$(obj.cont).remove();
					}
					$(obj.dom).removeData("ntg_frames_simple_filter_instance");
					return obj.dom;
				};
				function resetFrame(sel){
					$(sel).each(function(i, frame){
						$(frame).html($(frame).data("ntg_saved_html").html());
					});
				}
				function find(que, donde){
					var test = false;
					if("undefined" != typeof(que) 
						&& que.length > 0 
						&& "undefined" != typeof(donde) 
						&& donde.length > 0){
						$.each(donde, function(i,donde_palabra){
							if( donde_palabra.indexOf(que) == 0 ){
								test = true;
								return false; // break
							}
						});
					}
					return test;
				}

				function markFrame(frame,texto){

					var mod = $(frame)
						.data("ntg_saved_html")
						.clone();
					var palabras = texto.split(/\s+/)
						.sort(
							function(b,a){ 
								if( a.length > b.length){ 
									return 1;
								}else if( a.length< b.length){ 
									return -1;
								}else{
									return 0;
								} 
							}
						);
					$.each(palabras,function(i, palabra){
						var reg = new RegExp(palabra,"i");
						var nodosTexto = 
							$(mod)
							.find("*")
							.add(mod)
							.contents()
							.filter(
								function(){
									return this.nodeType == 3 && this.nodeValue.trim().length > 0;
								}
							);
						nodosTexto = nodosTexto.toArray().sort(
							function(b,a){ 
								if( a.length > b.length){ 
									return 1;
								}else if( a.length< b.length){ 
									return -1;
								}else{
									return 0;
								} 
							}
						);
						$.each(nodosTexto, function(j,nodo){
							var texto = $(nodo).text();
							if(texto.search(reg) != -1){
								texto = texto.split(reg).join("<strong class='" + 
									obj.opts.markSelectedClass + 
									"'>" +
									palabra +
									"</strong>");
								$(nodo).replaceWith("<span>" + texto + "</span>");
							}
						});
					});
					$(frame).html($(mod).html());
				}
				function debug(msg){
					if(obj.opts.debug && window.console){
						window.console.log("ntg_frames_simple_filter: "+msg);
					}
				};
				obj.init();
			});
		} else if(typeof(options)==='string'){
			ret = this;
			this.each(function(){
				var instancia = $(this).data("ntg_frames_simple_filter_instance");
				if('undefined' != typeof(instancia) && 'function' === typeof(instancia[options])){
					var out = instancia[options].apply(instancia,params);
					if(out != instancia.dom){
						ret = out;
						return false
					}
				}
			});
			return ret;
		} else {
			return this;
		}
	};
})(jQuery);
